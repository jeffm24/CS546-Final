    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
	<script src="//d3js.org/d3.v3.min.js"></script>
	
    <!-- jQuery fallback -->
    <script>
        if (!window.jQuery) { document.write('<script src="/assets/js/jquery.js"><\/script>'); }
    </script>

    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/js/bootstrap.min.js"></script>

    <!-- Sweetalert scripts -->
    <script src="/assets/js/sweetalert.min.js"></script>

    <!-- Scripts we made -->
    <script>
        //For signout
        $('#signOutBtn').on('click', function(e) {

            $.ajax({
                url: '/signout',
                type: 'POST',
                success: function(data) {
                    location.reload();
                },
                error: function(xhr, status, error) {
                    alert(xhr.responseText + ' (' + xhr.status + ')');
                }
            });

        });

        /*
        $(".tickerItem > a").click(function(e) {
            $('html, body').animate({
                scrollTop: $(e.target).offset().top
            }, 500);
        });
        */

        //For search bar pixles from top
        $('#searchBar').data("offset-top", $('#searchBar').offset().top);

        //dynamic search suggestions
        $('#searchBarInput').on('input propertychange paste', function() {

            if ($('#searchBarInput').val()) {
                $.ajax({
                    url: '/getTickerSearchSuggestions',
                    type: 'POST',
                    data: {
                        search: $('#searchBarInput').val()
                    },
                    success: function(data) {
                        if (data) {
                            var listOfSymbols = [];

                            for (ticker of data.suggestions) {
                                listOfSymbols.push(ticker.symbol);
                            }

                            $('#searchBarInput').autocomplete({
                                source: listOfSymbols
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log(xhr.responseText + ' (' + xhr.status + ')');
                    }
                });
            }

        });

        //Search submit
        $('#searchForm').submit(function(e) {
            $.ajax({
                url: '/search',
                type: 'POST',
                data: {
                    search: $('#searchBarInput').val().toUpperCase()
                },
                success: function(data) {
                    if (data.notFound) {
                        swal({
                            title: "Error!",
                            text: data.result,
                            type: "error",
                            confirmButtonText: "OK"
                        });
                    } else {
                        $('#searchResult').html(data.result);
                    }
                },
                error: function(xhr, status, error) {
                    swal({
                        title: "Error!",
                        text: xhr.responseJSON.error,
                        type: "error",
                        confirmButtonText: "OK"
                    });
                }
            });

            return false;
        });

        // Save Ticker Button click handler
        $(document).on('click', '#saveTickerBtn', function(event){
            $.ajax({
                url: '/saveTicker',
                type: 'POST',
                data: {
                    symbol: $('#saveTickerBtn').data('symbol')
                },
                success: function(data) {
                    location.reload();
                },
                error: function(xhr, status, error) {
                    swal({
                        title: "Error!",
                        text: xhr.responseJSON.error,
                        type: "error",
                        confirmButtonText: "OK"
                    });
                }
            });
        });

        // Remove Ticker Button click handler
        $(document).on('click', '#removeTickerBtn', function(event){
            $.ajax({
                url: '/removeTicker',
                type: 'DELETE',
                data: {
                    symbol: $(event.target).data('symbol')
                },
                success: function(data) {
                    location.reload();
                },
                error: function(xhr, status, error) {
                    swal({
                        title: "Error!",
                        text: xhr.responseJSON.error,
                        type: "error",
                        confirmButtonText: "OK"
                    });
                }
            });
        });
		
		$('.week').on('click', function(e) {
			console.log($(e.target).data("symbol"));
			var stock = $(e.target).data("symbol");
			var end = new Date();
			var start = new Date();
			start.setDate(end.getDate()-7);
			start = start.toISOString().split('T')[0];
			end = end.toISOString().split('T')[0];
			updateGraph(stock,start,end);
		
		});
		
		$('.month').on('click', function(e) {
			console.log($(e.target).data("symbol"));
			var stock = $(e.target).data("symbol");
			var end = new Date();
			var start = new Date();
			start.setMonth(end.getMonth()-1);
			start = start.toISOString().split('T')[0];
			end = end.toISOString().split('T')[0];
			updateGraph(stock,start,end);
		
		});
		
		$('.3month').on('click', function(e) {
			console.log($(e.target).data("symbol"));
			var stock = $(e.target).data("symbol");
			var end = new Date();
			var start = new Date();
			start.setMonth(end.getMonth()-3);
			start = start.toISOString().split('T')[0];
			end = end.toISOString().split('T')[0];
			updateGraph(stock,start,end);
		
		});
		
		$('.year').on('click', function(e) {
			console.log($(e.target).data("symbol"));
			var stock = $(e.target).data("symbol");
			var end = new Date();
			var start = new Date();
			start.setFullYear(end.getFullYear()-1);
			start = start.toISOString().split('T')[0];
			end = end.toISOString().split('T')[0];
			updateGraph(stock,start,end);
		});
		
	
		function updateGraph(t,s,e) {

		
			var stock = t;
			var start = s;
			var end = e;
			console.log("#d3" + stock);
				
					
			var inputURL = "http://query.yahooapis.com/v1/public/yql"+
				"?q=select%20*%20from%20yahoo.finance.historicaldata%20"+
				"where%20symbol%20%3D%20%22"
				+stock+"%22%20and%20startDate%20%3D%20%22"
				+start+"%22%20and%20endDate%20%3D%20%22"
				+end+"%22&format=json&env=store%3A%2F%2F"
				+"datatables.org%2Falltableswithkeys";

				// Get the data again
				d3.json(inputURL, function(error, data){

					data.query.results.quote.forEach(function(d) {
						d.date = parseDate(d.Date);
						d.high = +d.High;
						d.low = +d.Low;
					});

					// Scale the range of the data
					x.domain(d3.extent(data.query.results.quote, function(d) {
						return d.date; }));
					y.domain([
						d3.min(data.query.results.quote, function(d) { 
							return d.low; }), 
						d3.max(data.query.results.quote, function(d) { 
							return d.high; })
					]);

					// Select the section we want to apply our changes to
					// NEED TO FIX
					var svg = d3.select("#d3-" + t).transition();

					// Make the changes
					svg.select(".line")    // change the line
						.transition()
						.duration(1000) 
						.attr("d", valueline(data.query.results.quote));

					
			 
					svg.select(".shadow") // change the title shadow
						.duration(1000)
						.text(stock);

					$('#title-' + stock).text(parseFloat(data.query.results.quote[0].Close).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
    
						 
					//svg.select(".stock")   // change the title
					//	.duration(2000)
					//	.transition()
					//	.text(parseFloat(data.query.results.quote[0].Close).toLocaleString('en-US', { style: 'currency', currency: 'USD' }));
				 
					//svg.select(".x.axis") // change the x axis
					//	.duration(1000)
					//	.call(xAxis);
					//svg.select(".y.axis") // change the y axis
					//	.duration(1000)
					//	.call(yAxis);

				});
		};
	

		$(document).ready(function () {
			$(".d3-wrapper").each(function() {
				var symbol = $(this).data("symbol");
				$("#d3-" + symbol + " .week").click();
			});
		
		});
		
    </script>
